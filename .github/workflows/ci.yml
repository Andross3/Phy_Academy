name: CI - Phy Academy

on:
  push:
    branches: 
      - juan_compilar_codigo_estudiante
  pull_request:
    branches:
      - juan_compilar_codigo_estudiante
  workflow_dispatch:

jobs:
  verificar-codigo:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
<<<<<<< HEAD
          POSTGRES_DB: testdb
=======
          POSTGRES_DB: phy_db
>>>>>>> b0c8de7 (Create ci.yml)
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

<<<<<<< HEAD
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      # ===== FRONTEND =====
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependencias frontend
        working-directory: frontend
        run: npm install

      - name: Ejecutar linter del frontend
        working-directory: frontend
        run: npm run lint

      - name: Verificar compilación del frontend
        working-directory: frontend
        run: npm run build

      # ===== BACKEND =====
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Instalar dependencias backend
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Ejecutar pruebas del backend
        working-directory: backend
        run: pytest
=======
    steps:
      - name: Obtener código
        uses: actions/checkout@v3

      - name: Configurar Docker Compose
        run: docker-compose up -d --build

      - name: Esperar a que los servicios estén listos
        run: sleep 15

      - name: Ejecutar pruebas del backend (Flask)
        run: docker-compose exec -T backend pytest

      - name: Ejecutar pruebas del frontend (React)
        run: docker-compose exec -T frontend npm test -- --watchAll=false

      - name: Desmontar servicios
        if: always()
        run: docker-compose down
>>>>>>> b0c8de7 (Create ci.yml)
